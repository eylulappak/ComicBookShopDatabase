-- The comic book shop database is a database that allows visitors of the online store to search comic books, 
-- access detailed information about the comic books and buy the ones that are in stock. Entity sets are; issue, volume, series, publisher, writer,
-- illustrator, content, maincharacter, cover, cformat, customer. A volume is a collection of issues. An issue doesn’t have to be a part of a volume 
-- and it can be sold separately. Both an issue and a volume belong to a series. 
-- (e.g. the comic book volume “Batman, Volume 1: The Court of Owls” includes issues #1-7 of the “Batman (2011)” series.) 
-- A publisher publishes a series of comic books. A writer writes issues of comic books. An illustrator does illustrations for issues of comic books. 
-- A content specifies an issue’s genre, character type, etc. and issues have contents. A main character is the leading character that each  
-- series of a comic book has. Each issue has a cover and a format. A customer buys comic books. 
-- My relationship sets: buy_volume and buy_issue


-- 1. Create and use a schema 
CREATE SCHEMA SE2222_19070006015;
USE SE2222_19070006015;
-- 1. Definitions:
-- All table definitions of your project including any constraints

-- publisher table represents publishers of the series of comic books.
-- It has the attributes; publishername, country.
CREATE TABLE PUBLISHER(
PUBLISHERNAME VARCHAR(20) PRIMARY KEY,
COUNTRY VARCHAR(10));

-- writer table represents writers of the issues of comic books.
-- It has the attributes; writername, nationality, numofcomics (number of comic books the writer has written).
CREATE TABLE WRITER(
WRITERNAME VARCHAR(20) PRIMARY KEY,
NATIONALITY VARCHAR(10),
NUMOFCOMICS INT);

-- illustrator table represents illustrators of the issues of comic books.
-- It has the attributes; illustratorname, nationality, numofcomics (number of comic books the illustrator has illustrated).
CREATE TABLE ILLUSTRATOR(
ILLUSTRATORNAME VARCHAR(20) PRIMARY KEY,
NATIONALITY VARCHAR(10),
NUMOFCOMICS INT);

-- maincharacter table represents the main character of a series.
-- It has the attributes; charactername, gender, nationality, dateofbirth, occupation, firstappearance.
CREATE TABLE MAINCHARACTER(
CHARACTERNAME VARCHAR(20) PRIMARY KEY,
GENDER VARCHAR(6),
NATIONALITY VARCHAR(10),
DATEOFBIRTH DATE,
OCCUPATION VARCHAR(20),
FIRSTAPPEARANCE VARCHAR(50));

-- content table represents the content of an issue of a comic book.
-- It has the attributes id, genre, charactertype, comiclanguage (language of the comic book), ageguideline (all ages, teens, 18+, etc.).
CREATE TABLE CONTENT(
ID INT PRIMARY KEY,
GENRE VARCHAR(15) NOT NULL,
CHARACTERTYPE VARCHAR(10),
COMICLANGUAGE VARCHAR(10),
AGEGUIDELINE VARCHAR(25));

-- cover table represents the cover of an issue of a comic book.
-- It has the attributes; id, covertype (photo cover, painted cover,...), coversubject(space, girl, pirate,...), artist(the person who drew or illustrated the cover).
CREATE TABLE COVER(
ID INT PRIMARY KEY,
COVERTYPE VARCHAR(20),
COVERSUBJECT VARCHAR(10),
ARTIST VARCHAR(20));

-- cformat table represents the format of an issue of a comic book.
-- It has the attributes; id, papertype (e.g. card stock paper), dimensions (e.g. 16.84 x 26.01 cm), fontsize, color.
CREATE TABLE CFORMAT(
ID INT PRIMARY KEY,
PAPERTYPE VARCHAR(20),
DIMENSIONS VARCHAR(10),
FONTSIZE INT,
COLOR VARCHAR(12));

-- customer table represents the customer of the comic book shop who buys issues or volumes of comic books.
-- It has the attributes; id, cname (name), csurname (surname), email, phonenumber, dateofbirth, country, city, postalcode, street, houseno.
CREATE TABLE CUSTOMER(
ID INT PRIMARY KEY,
CNAME VARCHAR(10) NOT NULL,
CSURNAME VARCHAR(10) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
PHONENUMBER DECIMAL(11,0) NOT NULL,
DATEOFBIRTH DATE NOT NULL,
COUNTRY VARCHAR(10) NOT NULL,
CITY VARCHAR(10) NOT NULL,
POSTALCODE DECIMAL(5,0) NOT NULL,
STREET VARCHAR(20) NOT NULL,
HOUSENO INT NOT NULL);

-- series table represents a series of comic books, it's a nonphysical concept that unites some issues under the same name and story.
-- (e.g. the comic book volume “Batman, Volume 1: The Court of Owls” includes issues #1-7 of the “Batman (2011)” series.) 
-- It has the attributes; seriesname, seriestype, startdate, numofissues, continuation. Foreign keys: publishername, charactername.
CREATE TABLE SERIES(
SERIESNAME VARCHAR(50) PRIMARY KEY,
SERIESTYPE VARCHAR(10),
STARTDATE DATE,
NUMOFISSUES INT,
CONTINUATION VARCHAR(10),
CHARACTERNAME VARCHAR(20) NOT NULL,
PUBLISHERNAME VARCHAR(20),
CONSTRAINT SERIES_CHARACTERNAME_FK FOREIGN KEY(CHARACTERNAME) REFERENCES MAINCHARACTER(CHARACTERNAME),
CONSTRAINT SERIES_PUBLISHERNAME_FK FOREIGN KEY(PUBLISHERNAME) REFERENCES PUBLISHER(PUBLISHERNAME));

-- volume table represents volumes of comic books. A volume is a physical concept that is formed by putting consecutive issues together.
-- Volume is a weak entity set and its identifying entity set is series. It has the attributes; ISBN, title, volumeno, stock (quantity of volumes in stock), 
-- coverprice, price, volumecondition, dateofpublish, rangeofissues. Primary key: isbn, seriesname. 
CREATE TABLE VOLUME(
ISBN DECIMAL(13,0),
SERIESNAME VARCHAR(50),
TITLE VARCHAR(50) NOT NULL,
VOLUMENO INT NOT NULL,
STOCK INT,
COVERPRICE DECIMAL(4,2),
PRICE DECIMAL(4,2) NOT NULL,
VOLUMECONDITION VARCHAR(10),
DATEOFPUBLISH DATE,
RANGEOFISSUES VARCHAR(5) NOT NULL,
CONSTRAINT VOLUME_PK PRIMARY KEY(ISBN, SERIESNAME),
CONSTRAINT VOLUME_SERIESNAME_FK FOREIGN KEY(SERIESNAME) REFERENCES SERIES(SERIESNAME) ON DELETE CASCADE);

-- issue table represents an issue of a comic book. Issue is a weak entity set and its identifying entity set is series. 
-- It has the attributes; ISBN, title, issueno, stock (quantity of issues in stock), coverprice, price, issuecondition, dateofpublish.
-- Primary key: isbn, seriesname. Foreign keys; volumeisbn, writername, illustratorname, contentid, coverid, formatid.
CREATE TABLE ISSUE(
ISBN DECIMAL(13,0),
SERIESNAME VARCHAR(50),
TITLE VARCHAR(50) NOT NULL,
ISSUENO INT NOT NULL,
STOCK INT,
COVERPRICE DECIMAL(4,2),
PRICE DECIMAL(4,2) NOT NULL,
ISSUECONDITION VARCHAR(10),
DATEOFPUBLISH DATE,
VOLUMEISBN DECIMAL(13,0),
WRITERNAME VARCHAR(20),
ILLUSTRATORNAME VARCHAR(20),
CONTENTID INT,
COVERID INT,
FORMATID INT,
CONSTRAINT ISSUE_PK PRIMARY KEY(ISBN, SERIESNAME),
CONSTRAINT ISSUE_SERIESNAME_FK FOREIGN KEY(SERIESNAME) REFERENCES SERIES(SERIESNAME) ON DELETE CASCADE,
CONSTRAINT ISSUE_VOLUMEISBN_FK FOREIGN KEY(VOLUMEISBN) REFERENCES VOLUME(ISBN),
CONSTRAINT ISSUE_WRITERNAME_FK FOREIGN KEY(WRITERNAME) REFERENCES WRITER(WRITERNAME),
CONSTRAINT ISSUE_ILLUSTRATORNAME_FK FOREIGN KEY(ILLUSTRATORNAME) REFERENCES ILLUSTRATOR(ILLUSTRATORNAME),
CONSTRAINT ISSUE_CONTENTID_FK FOREIGN KEY(CONTENTID) REFERENCES CONTENT(ID),
CONSTRAINT ISSUE_COVERID_FK FOREIGN KEY(COVERID) REFERENCES COVER(ID),
CONSTRAINT ISSUE_FORMATID_FK FOREIGN KEY(FORMATID) REFERENCES CFORMAT(ID));

-- buy_volume is a relationship set between the entities customer and volume.
-- The cardinality of the relationship between customer and volume is many-to-many.
-- This table represents the relationship "customer buys volume". 
CREATE TABLE BUY_VOLUME(
CUSTOMERID INT,
VOLUMEISBN DECIMAL(13,0),
CONSTRAINT BUY_VOLUME_PK PRIMARY KEY(CUSTOMERID, VOLUMEISBN),
CONSTRAINT BUY_VOLUME_CUSTOMERID_FK FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(ID) ON DELETE CASCADE,
CONSTRAINT BUY_VOLUME_VOLUMEISBN_FK FOREIGN KEY(VOLUMEISBN) REFERENCES VOLUME(ISBN) ON DELETE CASCADE);

-- buy_issue is a relationship set between the entities customer and issue.
-- The cardinality of the relationship between customer and issue is many-to-many.
-- This table represents the relationship "customer buys issue". 
CREATE TABLE BUY_ISSUE(
CUSTOMERID INT,
ISSUEISBN DECIMAL(13,0),
CONSTRAINT BUY_ISSUE_PK PRIMARY KEY(CUSTOMERID, ISSUEISBN),
CONSTRAINT BUY_ISSUE_CUSTOMERID_FK FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(ID) ON DELETE CASCADE,
CONSTRAINT BUY_ISSUE_ISSUEISBN_FK FOREIGN KEY(ISSUEISBN) REFERENCES ISSUE(ISBN) ON DELETE CASCADE);

-- 2. Insertions(Data manipulation):

INSERT INTO PUBLISHER VALUES('DC COMICS', 'USA');
INSERT INTO PUBLISHER VALUES('MARVEL COMICS', 'USA');
INSERT INTO PUBLISHER VALUES('IMAGE COMICS', 'USA');
INSERT INTO PUBLISHER VALUES('DARK HORSE COMICS', 'CANADA');
INSERT INTO PUBLISHER VALUES('IDW PUBLISHING', 'GERMANY');

INSERT INTO WRITER VALUES('STAN LEE', 'AMERICAN', 50);
INSERT INTO WRITER VALUES('ALAN MOORE', 'AMERICAN', 75);
INSERT INTO WRITER VALUES('MARIKO TAMAKI', 'CANADIAN', 22);
INSERT INTO WRITER VALUES('ART SPIEGELMAN', 'FRENCH', 10);
INSERT INTO WRITER VALUES('FRANK MILLER', 'AMERICAN', 16);
INSERT INTO WRITER VALUES('JACK KIRBY', 'AMERICAN', 32);
INSERT INTO WRITER VALUES('JEPH LOEB', 'FRENCH', 9);

INSERT INTO ILLUSTRATOR VALUES('FRANK MILLER', 'AMERICAN', 11);
INSERT INTO ILLUSTRATOR VALUES('JACK KIRBY', 'AMERICAN', 21);
INSERT INTO ILLUSTRATOR VALUES('JIM LEE', 'KOREAN', 8);
INSERT INTO ILLUSTRATOR VALUES('TODD MCFARLANE', 'AMERICAN', 45);
INSERT INTO ILLUSTRATOR VALUES('BRIAN BOLLAND', 'BRITISH', 19);
INSERT INTO ILLUSTRATOR VALUES('WILL EISNER', 'BRITISH', 32);

INSERT INTO MAINCHARACTER VALUES('BATMAN', 'MALE', 'AMERICAN', '1978-04-17', 'BUSINESSMAN', 'DETECTIVE COMICS #27');
INSERT INTO MAINCHARACTER VALUES('WONDER WOMAN', 'FEMALE', 'AMERICAN', '1976-03-22', 'ARMY NURSE', 'ALL STAR COMICS #8');
INSERT INTO MAINCHARACTER VALUES('HARLEY QUINN', 'FEMALE', 'AMERICAN', '1990-07-20', 'PSYCHIATRIST', 'JOKERS FAVOR');
INSERT INTO MAINCHARACTER VALUES('BLACK WIDOW', 'FEMALE', 'RUSSIAN', '1984-05-19', 'AGENT', 'TALES OF SUSPENSE #52');
INSERT INTO MAINCHARACTER VALUES('SCARLET WITCH', 'FEMALE', 'SOKOVIAN', '1976-02-10', 'AGENT', 'THE X-MEN #4');
INSERT INTO MAINCHARACTER VALUES('HELLBOY', 'MALE', 'AMERICAN', '1933-06-11', 'AGENT', 'SAN DIEGO COMIC-CON COMICS #2');
INSERT INTO MAINCHARACTER VALUES('SPAWN', 'MALE', 'SOMALIAN', '1985-11-11', 'SOLDIER', 'SPAWN #1');
INSERT INTO MAINCHARACTER VALUES('LEONARDO', 'MALE', 'AMERICAN', '1999-06-18', 'NINJA', 'TEENAGE MUTANT NINJA TURTLES #1');

INSERT INTO CONTENT VALUES(1, 'ACTION', 'SUPERHERO', 'ENGLISH', 'TEEN'); 
INSERT INTO CONTENT VALUES(2, 'ADVENTURE', 'ANIMAL', 'ENGLISH', 'ALL AGES'); 
INSERT INTO CONTENT VALUES(3, 'THRILLER', 'VILLAIN', 'GERMAN', 'EXPLICIT CONTENT(18+)'); 
INSERT INTO CONTENT VALUES(4, 'ACTION', 'SUPERHERO', 'GERMAN', 'TEEN'); 
INSERT INTO CONTENT VALUES(5, 'SCIENCE FICTION', 'SUPERHERO', 'FRENCH', 'ALL AGES'); 
INSERT INTO CONTENT VALUES(6, 'ACTION', 'VILLAIN', 'ENGLISH', 'EXPLICIT CONTENT(18+)'); 

INSERT INTO COVER VALUES(1, 'SKETCH COVER', 'ANIMAL', 'GARTH ENNIS');
INSERT INTO COVER VALUES(2, 'PHOTO COVER', 'CITY', 'GARTH ENNIS');
INSERT INTO COVER VALUES(3, 'PAINTED COVER', 'SPACE', 'JIM STERANKO');
INSERT INTO COVER VALUES(4, 'SKETCH COVER', 'BLOOD', 'ARTHUR ADAMS');
INSERT INTO COVER VALUES(5, 'FLIPBOOK COVER', 'CITY', 'TIM SALE');
INSERT INTO COVER VALUES(6, 'PAINTED COVER', 'FOREST', 'ALEX ROSS');

INSERT INTO CFORMAT VALUES(1, 'BRISTOL PAPER', '16x26 cm', 12, 'BLACK&WHITE');
INSERT INTO CFORMAT VALUES(2, 'VELLUM PAPER', '21‌x29 cm', 10, 'COLORED');
INSERT INTO CFORMAT VALUES(3, 'SMOOTH PAPER', '16x26 cm', 14, 'PINK&BLUE');
INSERT INTO CFORMAT VALUES(4, 'CARD STOCK PAPER', '21x29 cm', 10, 'BLACK&WHITE');
INSERT INTO CFORMAT VALUES(5, 'BRISTOL PAPER', '14‌x21 cm', 8, 'WHITE&BLUE');
INSERT INTO CFORMAT VALUES(6, 'BRISTOL PAPER', '14‌x21 cm', 10, 'COLORED');

INSERT INTO CUSTOMER VALUES(1, 'JOHN', 'SMITH', 'johnsmith@gmail.com', 05324567845, '1993-01-18', 'UK', 'LONDON', 35750, '221B BAKER STREET', 43);
INSERT INTO CUSTOMER VALUES(2, 'MICHAEL', 'SCOTT', 'michaelscott@hotmail.com', 05524123845, '1984-09-30', 'USA', 'NEW YORK', 45740, '464. STREET', 22);
INSERT INTO CUSTOMER VALUES(3, 'PAMELA', 'BEASLEY', 'pambeasley1234@gmail.com', 05423984021, '2001-09-23', 'USA', 'CHICAGO', 98750, 'BUTCHER STREET', 12);
INSERT INTO CUSTOMER VALUES(4, 'EMMA', 'GREEN', 'emmagreen@hotmail.com', 05448519365, '1968-05-24', 'TURKEY', 'IZMIR', 34450, 'SALKIM SOKAK', 8);
INSERT INTO CUSTOMER VALUES(5, 'MONICA', 'GELLER', 'monicageller@outlook.com', 05670207645, '1998-12-31', 'TURKEY', 'ISTANBUL', 76250, 'INONU SOKAK', 14);
INSERT INTO CUSTOMER VALUES(6, 'JOEY', 'TRIBBIANI', 'joeytribbiani@gmail.com', 05550322404, '1972-10-06', 'USA', 'SEATTLE', 44450, 'BUTLER STREET', 33);

INSERT INTO SERIES VALUES('BATMAN (2011)', 'LIMITED', '2011-06-11', 52, 'FINISHED', 'BATMAN', 'DC COMICS');
INSERT INTO SERIES VALUES('WONDER WOMAN (THE NEW 52)', 'LIMITED', '2013-01-15', 52, 'ONGOING', 'WONDER WOMAN', 'DC COMICS');
INSERT INTO SERIES VALUES('SUICIDE SQUAD', 'REGULAR', '1987-05-15', 208, 'FINISHED', 'HARLEY QUINN', 'DC COMICS');
INSERT INTO SERIES VALUES('BLACK WIDOW (2014 SERIES)', 'REGULAR', '2014-09-09', 140, 'ONGOING', 'BLACK WIDOW', 'MARVEL COMICS');
INSERT INTO SERIES VALUES('VISION AND THE SCARLET WITCH', 'ONE-SHOT', '1985-06-27', 1, 'FINISHED', 'SCARLET WITCH', 'MARVEL COMICS');
INSERT INTO SERIES VALUES('HELLBOY', 'REGULAR', '2019-08-14', 8, 'ONGOING', 'HELLBOY', 'DARK HORSE COMICS');
INSERT INTO SERIES VALUES('SPAWN (1992)', 'LIMITED', '1992-03-21', 319, 'FINISHED', 'SPAWN', 'IMAGE COMICS');
INSERT INTO SERIES VALUES('TEENAGE MUTANT NINJA TURTLES (2011)', 'REGULAR', '2011-04-23', 118, 'FINISHED', 'LEONARDO', 'IDW PUBLISHING');

INSERT INTO VOLUME VALUES(1234567890123, 'BATMAN (2011)', 'BATMAN, VOLUME 1: THE COURT OF OWLS', 1, 10, 9.99, 7.99, 'FINE', '2011-08-16', '1-7');
INSERT INTO VOLUME VALUES(2134567890431, 'WONDER WOMAN (THE NEW 52)', '	WONDER WOMAN, VOLUME 2', 2, 3, 5.90, 3.90, 'VERY FINE', '2013-09-01', '11-20');
INSERT INTO VOLUME VALUES(3334567856654, 'SUICIDE SQUAD', 'SUICIDE SQUAD: VOL. 3', 3, 5, 13.00, 10.00, 'FAIR', '1987-12-22', '23-30');
INSERT INTO VOLUME VALUES(3234567987655, 'BLACK WIDOW (2014 SERIES)', 'BLACK WIDOW: VOL. 1', 1, 7, 8.99, 6.99, 'NEAR MINT', '2014-11-09', '1-5');
INSERT INTO VOLUME VALUES(1131234590123, 'HELLBOY', 'HELLBOY AND THE B.P.R.D THE SEVEN WIVES CLUB', 1, 6, 16.99, 15.99, 'VERY FINE', '2019-08-14', '1-8');
INSERT INTO VOLUME VALUES(1035432190123, 'SPAWN (1992)', 'SPAWN: VOL. 4', 4, 15, 35.00, 35.00, 'NEAR MINT', '1992-10-11', '40-49');
INSERT INTO VOLUME VALUES(1934567890123, 'TEENAGE MUTANT NINJA TURTLES (2011)', 'TEENAGE MUTANT NINJA TURTLES: VOL. 5', 5, 11, 7.99, 5.99, 'POOR', '2012-09-20', '52-60');

INSERT INTO ISSUE VALUES(9876543219876, 'BATMAN (2011)', 'BATMAN: THE COURT OF OWLS #1', 1, 5, 3.99, 1.99, 'GOOD', '2011-06-11', 1234567890123, 'ALAN MOORE', 'FRANK MILLER', 1, 2, 1);
INSERT INTO ISSUE VALUES(9793447983894, 'WONDER WOMAN (THE NEW 52)', 'WONDER WOMAN #15', 15, 2, 1.99, 0.99, 'GOOD', '2013-07-05', 2134567890431, 'ALAN MOORE', 'JACK KIRBY', 4, 5, 6);
INSERT INTO ISSUE VALUES(9619287374522, 'SUICIDE SQUAD', 'SUICIDE SQUAD #24', 24, 13, 2.99, 2.99, 'VERY GOOD', '1988-04-15', 3334567856654, 'MARIKO TAMAKI', 'JIM LEE', 3, 4, 3);
INSERT INTO ISSUE VALUES(9538723948337, 'BLACK WIDOW (2014 SERIES)', 'BLACK WIDOW #4', 4, 20, 4.99, 3.99, 'FINE', '2015-03-10', 3234567987655, 'STAN LEE', 'TODD MCFARLANE', 1, 5, 4);
INSERT INTO ISSUE VALUES(9419283747464, 'VISION AND THE SCARLET WITCH', 'VISION AND THE SCARLET WITCH #1', 1, 10, 7.99, 8.99, 'VERY FINE', '1985-06-27', NULL, 'STAN LEE', 'JACK KIRBY', 5, 6, 2);
INSERT INTO ISSUE VALUES(9356438574903, 'SPAWN (1992)', 'SPAWN #42', 42, 18, 16.99, 15.99, 'NEAR MINT', '1993-01-18', 1035432190123, 'ART SPIEGELMAN', 'WILL EISNER', 5, 3, 5);
INSERT INTO ISSUE VALUES(9292358574854, 'HELLBOY', 'HELLBOY AND THE B.P.R.D THE SEVEN WIVES CLUB #7', 7, 9, 11.99, 10.99, 'NEAR MINT', '2020-01-08', 1131234590123, 'JEPH LOEB', 'BRIAN BOLLAND', 6, 2, 5);
INSERT INTO ISSUE VALUES(9103384384398, 'TEENAGE MUTANT NINJA TURTLES (2011)', 'TEENAGE MUTANT NINJA TURTLES #59', 59, 3, 0.99, 0.50, 'POOR', '2012-02-26', 1934567890123, 'ART SPIEGELMAN', 'TODD MCFARLANE', 2, 1, 1);
INSERT INTO ISSUE VALUES(9103384384398, 'SUICIDE SQUAD', 'SUICIDE SQUAD #9', 9, 2, 17.99, 15.99, 'NEAR MINT', '1987-12-07', NULL, 'MARIKO TAMAKI', 'JIM LEE', 3, 4, 4);

INSERT INTO BUY_VOLUME VALUES(1, 1234567890123);
INSERT INTO BUY_VOLUME VALUES(2, 2134567890431);
INSERT INTO BUY_VOLUME VALUES(3, 3334567856654);
INSERT INTO BUY_VOLUME VALUES(3, 3234567987655);

INSERT INTO BUY_ISSUE VALUES(4, 9876543219876);
INSERT INTO BUY_ISSUE VALUES(4, 9793447983894);
INSERT INTO BUY_ISSUE VALUES(5, 9619287374522);
INSERT INTO BUY_ISSUE VALUES(6, 9619287374522);

-- 3. Queries:

-- 1) In this query, we update the stock (quantity) of issues by substracting the number of times the issue was bought by a customer.
-- The subquery will return 0 if the issue hasn't been sold. (In this case, the stock of "SUICIDE SQUAD #24", "WONDER WOMAN #15" and 
-- "BATMAN: THE COURT OF OWLS #1" will be updated.)
UPDATE ISSUE SET STOCK = STOCK - (SELECT COUNT(B.ISSUEISBN) FROM BUY_ISSUE B WHERE ISSUE.ISBN = B.ISSUEISBN) 
WHERE STOCK > 0; 

-- 2) In this query, we remove the issues from our store that are in a 'poor' condition. (TEENAGE MUTANT NINJA TURTLES #59 will be deleted)
DELETE FROM ISSUE
WHERE ISSUECONDITION = 'POOR';

-- 3) In this query, we display the series title and its character's name where the main character is female.
SELECT A.SERIESNAME "SERIES", A.CHARACTERNAME "CHARACTER" FROM SERIES A, MAINCHARACTER B
WHERE A.CHARACTERNAME = B.CHARACTERNAME AND GENDER ='FEMALE';

-- 4) In this query, we display the publisher name and the average price of issues published by that publisher where the average price is 
-- greater than the average price of books written by Stan Lee. (we join three tables)
SELECT S.PUBLISHERNAME AS COMPANY, AVG(PRICE) AS AVERAGE_PRICE FROM PUBLISHER P, ISSUE I, SERIES S 
WHERE I.SERIESNAME = S.SERIESNAME AND S.PUBLISHERNAME = P.PUBLISHERNAME
GROUP BY S.PUBLISHERNAME HAVING AVG(PRICE) > (SELECT AVG(PRICE) FROM ISSUE WHERE WRITERNAME = 'STAN LEE');

-- 5) In this query, we display the title, age guideline, price and date of publish of issues that are appropriate for teenagers to read
-- with a 10% increase in prices. We sort the list by date of publish. (ageguideline is an attribute of CONTENT)
SELECT TITLE, AGEGUIDELINE, PRICE*1.10 NEW_PRICE, DATEOFPUBLISH FROM ISSUE, CONTENT
WHERE ISSUE.CONTENTID = CONTENT.ID AND AGEGUIDELINE IN('ALL AGES', 'TEEN')
ORDER BY DATEOFPUBLISH;
